{"ast":null,"code":"import _classCallCheck from \"/home/blynn/Downloads/random-projects/smartbrain/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/blynn/Downloads/random-projects/smartbrain/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/blynn/Downloads/random-projects/smartbrain/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/blynn/Downloads/random-projects/smartbrain/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/blynn/Downloads/random-projects/smartbrain/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/blynn/Downloads/random-projects/smartbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navigation from \"./components/Navigation.js\";\nimport Logo from \"./components/Logo.js\";\nimport ImageLinkForm from \"./components/ImageLinkForm.js\";\nimport FaceRecognition from \"./components/FaceRecognition.js\";\nimport Rank from \"./components/Rank.js\";\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\n/*\nhttps://samples.clarifai.com/metro-north.jpg\nhttps://samples.clarifai.com/face-det.jpg\n\n*/\n\nvar app = new Clarifai.App({\n  apiKey: 'f30b5096c4f44101bef605bbbd8a021a'\n});\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.calculateFaceLocation = function (data) {\n      var clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      var image = document.getElementById(\"inputImage\");\n      var width = Number(image.width);\n      var height = Number(image.height);\n      return {};\n      var left = image.style.left + clarifaiFace.left_col * width;\n      var top = image.style.top + clarifaiFace.top_row * height;\n      var boxWidth = width * clarifaiFace.right_col - width * clarifaiFace.left_col;\n      var boxHeight = height * clarifaiFace.bottom_row - height * clarifaiFace.top_row;\n      console.log(left, top, boxWidth, boxHeight);\n      var box = document.createElement(\"div\");\n      window.appendChild(box);\n      box.classList.add(\"border-box\");\n      box.style.left = \"\".concat(left, \"px\");\n      box.style.top = \"\".concat(top, \"px\");\n      box.style.width = \"\".concat(boxWidth, \"px\");\n      box.style.height = \"\".concat(boxHeight, \"px\");\n    };\n\n    _this.onInputChange = function (event) {\n      _this.setState({\n        input: event.target.value\n      });\n    };\n\n    _this.onSubmit = function (event) {\n      _this.setState({\n        imageUrl: _this.state.input\n      });\n\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, _this.state.input).then(function (response) {\n        return _this.calculateFaceLocation(response);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.state = {\n      input: \"\",\n      imageUrl: \"\",\n      box: {}\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Particles, {\n        className: \"particles\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(Navigation, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(Logo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(Rank, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(ImageLinkForm, {\n        onSubmit: this.onSubmit,\n        onInputChange: this.onInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(FaceRecognition, {\n        imageUrl: this.state.imageUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/blynn/Downloads/random-projects/smartbrain/src/App.js"],"names":["React","Component","Navigation","Logo","ImageLinkForm","FaceRecognition","Rank","Particles","Clarifai","app","App","apiKey","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","left","style","left_col","top","top_row","boxWidth","right_col","boxHeight","bottom_row","console","log","box","createElement","window","appendChild","classList","add","onInputChange","event","setState","input","target","value","onSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from \"./components/Navigation.js\";\nimport Logo from \"./components/Logo.js\";\nimport ImageLinkForm from \"./components/ImageLinkForm.js\";\nimport FaceRecognition from \"./components/FaceRecognition.js\";\nimport Rank from \"./components/Rank.js\"\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\n\n/*\nhttps://samples.clarifai.com/metro-north.jpg\nhttps://samples.clarifai.com/face-det.jpg\n\n*/\n\nconst app = new Clarifai.App({\n     apiKey: 'f30b5096c4f44101bef605bbbd8a021a'\n    });\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: \"\",\n      imageUrl: \"\",\n      box: {}\n    }\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById(\"inputImage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      \n    }\n\n    const left = image.style.left + clarifaiFace.left_col*width;\n    const top = image.style.top + clarifaiFace.top_row*height;\n    const boxWidth = width*clarifaiFace.right_col-width*clarifaiFace.left_col;\n    const boxHeight = height*clarifaiFace.bottom_row-height*clarifaiFace.top_row;\n    console.log(left, top, boxWidth, boxHeight);\n    let box = document.createElement(\"div\");\n    window.appendChild(box);\n    box.classList.add(\"border-box\");\n    box.style.left = `${left}px`\n    box.style.top = `${top}px`\n    box.style.width = `${boxWidth}px`\n    box.style.height = `${boxHeight}px`\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value})\n  }\n\n  onSubmit = (event) => {\n    this.setState( {imageUrl: this.state.input})\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, \n      this.state.input)\n    .then(response => this.calculateFaceLocation(response))\n    .catch(err => console.log(err));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\"/>\n        <Navigation />\n        <Logo />\n        <Rank />\n        <ImageLinkForm \n          onSubmit={this.onSubmit} \n          onInputChange={this.onInputChange} />\n        <FaceRecognition imageUrl = {this.state.imageUrl}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}